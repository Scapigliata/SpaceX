{"version":3,"sources":["logo.png","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","index.js"],"names":["module","exports","LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","key","LAUNCH_QUERY","Launch","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23d8c518.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6b7cbac7.png\";","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nconst LaunchItem = ({\n  launch: { flight_number, mission_name, launch_date_local, launch_success },\n}) => {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h4>Mission: <span className={classNames({\n            'text-success': launch_success,\n            'text-danger': !launch_success\n          })}>{ mission_name }</span></h4>\n          <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{ launch_date_local }</Moment></p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LaunchItem;\n","import React from 'react';\n\nconst MissionKey = () => {\n  return (\n    <div className=\"my-3\">\n      <p>\n        <span className=\"px-3 mr-2 bg-success\" /> = Success\n      </p>\n      <p>\n        <span className=\"px-3 mr-2 bg-danger\" /> = Fail\n      </p>\n    </div>\n  );\n};\n\nexport default MissionKey;\n","import React, { Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\nimport MissionKey from './MissionKey';\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nconst Launches = () => {\n  return (\n    <Fragment>\n      <h1 className=\"display-4 my-3\">Launches</h1>\n      <MissionKey />\n      <Query query={LAUNCHES_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return <h4>Loading...</h4>;\n          if (error) console.log(error);\n          console.log(data);\n\n          return <Fragment>{data.launches.map(launch => (\n            <LaunchItem key={launch.flight_number} launch={launch} />\n          ))}</Fragment>;\n        }}\n      </Query>\n    </Fragment>\n  );\n};\n\nexport default Launches;\n","import React, { Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { parse } from 'path';\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\n\nconst Launch = ({\n  match: {\n    params: { flight_number },\n  },\n}) => {\n  flight_number = parseInt(flight_number);\n\n  return (\n    <Fragment>\n      <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n        {({ loading, error, data }) => {\n          if (loading) return <h4>Loading...</h4>;\n          if (error) console.log(error);\n          const {\n            mission_name,\n            flight_number,\n            launch_year,\n            launch_success,\n            rocket: { rocket_id, rocket_name, rocket_type },\n          } = data.launch;\n          return (\n            <div>\n              <h1 className=\"display-4 my-3\">\n                <span className=\"text-dark\">Mission: </span>\n                {mission_name}\n              </h1>\n              <h4 className=\"mb-3\">Launch Details</h4>\n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">\n                  Flight Number: {flight_number}\n                </li>\n                <li className=\"list-group-item\">Launch Year: {launch_year}</li>\n                <li className=\"list-group-item\">\n                  Launch Successful:{' '}\n                  <span\n                    className={classNames({\n                      'text-success': launch_success,\n                      'text-danger': !launch_success,\n                    })}\n                  >\n                    {launch_success ? 'Yes' : 'No'}\n                  </span>\n                </li>\n              </ul>\n              <h4 className=\"my-3\">Rocket Details</h4>\n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n                <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n              </ul>\n              <hr />\n              <Link className=\"btn btn-secondary\" to=\"/\">Back</Link>\n            </div>\n          );\n        }}\n      </Query>\n    </Fragment>\n  );\n};\n\nexport default Launch;\n","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport './App.css';\nimport logo from './logo.png';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport LaunchItem from './components/LaunchItem';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"App\">\n          <img\n            src={logo}\n            alt=\"SpaceX\"\n            style={{ width: 300, display: 'block', margin: 'auto' }}\n          />\n          <Route exact path=\"/\" component={Launches}/>\n          <Route exact path=\"/launch/:flight_number\" component={Launch}/>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}